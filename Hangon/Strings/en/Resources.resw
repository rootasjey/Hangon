<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CollectionPhotosFetchFailed.Text" xml:space="preserve">
    <value>Sorry, I couldn't get the collection's photos :(</value>
  </data>
  <data name="CuratedHeader.Header" xml:space="preserve">
    <value>curated</value>
  </data>
  <data name="CuratedPhotosFetchFailed.Text" xml:space="preserve">
    <value>Sorry, I couldn't get curated photos :(</value>
  </data>
  <data name="LoadingPhotos.Text" xml:space="preserve">
    <value>Loading photos from Unsplash...</value>
  </data>
  <data name="NoResultsSearchPhotos.Text" xml:space="preserve">
    <value>there's no photos for this keyword</value>
  </data>
  <data name="RecentHeader.Header" xml:space="preserve">
    <value>recent</value>
  </data>
  <data name="RecentPhotoFetchFailed.Text" xml:space="preserve">
    <value>Sorry, I couldn't get recent photos :(</value>
  </data>
  <data name="SearchHeader.Header" xml:space="preserve">
    <value>search</value>
  </data>
  <data name="Searching.Text" xml:space="preserve">
    <value>searching photos from Unsplash...</value>
  </data>
  <data name="SearchSentenceSuggestion.Text" xml:space="preserve">
    <value>begin by typing a keyword</value>
  </data>
  <data name="ThemeText.Text" xml:space="preserve">
    <value>theme</value>
  </data>
  <data name="ThemeSwitch.OffContent" xml:space="preserve">
    <value>Dark Theme</value>
  </data>
  <data name="ThemeSwitch.OnContent" xml:space="preserve">
    <value>Light Theme</value>
  </data>
  <data name="SearchQueryMinimum" xml:space="preserve">
    <value>Please enter a word containing at least 3 characters</value>
  </data>
  <data name="CmdCopyLink.Label" xml:space="preserve">
    <value>copy link</value>
  </data>
  <data name="CmdCrop.Label" xml:space="preserve">
    <value>crop</value>
  </data>
  <data name="CmdDownload.Label" xml:space="preserve">
    <value>download</value>
  </data>
  <data name="CmdOpenInBrowser.Label" xml:space="preserve">
    <value>open in browser</value>
  </data>
  <data name="CmdRefresh.Label" xml:space="preserve">
    <value>refresh</value>
  </data>
  <data name="CmdSetAs.Label" xml:space="preserve">
    <value>set as...</value>
  </data>
  <data name="CmdToggleCaption.Label" xml:space="preserve">
    <value>hide caption</value>
  </data>
  <data name="DownloadingPhoto.Text" xml:space="preserve">
    <value>downloading photo...</value>
  </data>
  <data name="FlyoutLockscreen.Text" xml:space="preserve">
    <value>lockscreen</value>
  </data>
  <data name="FlyoutWallpaper.Text" xml:space="preserve">
    <value>wallpaper</value>
  </data>
  <data name="HideCaption" xml:space="preserve">
    <value>hide caption</value>
  </data>
  <data name="LanguageLabel.Text" xml:space="preserve">
    <value>language</value>
  </data>
  <data name="PivotPersonalization.Header" xml:space="preserve">
    <value>personalization</value>
  </data>
  <data name="SearchingPhotos.Text" xml:space="preserve">
    <value>searching photos from Unsplash...</value>
  </data>
  <data name="ShowCaption" xml:space="preserve">
    <value>show caption</value>
  </data>
  <data name="AutoResolutionDownloadText.Text" xml:space="preserve">
    <value>Always download photo in the following resolution</value>
  </data>
  <data name="AutoSaveDownloadText.Text" xml:space="preserve">
    <value>Save downloads automatically to Pictures library</value>
  </data>
  <data name="BackgroundTasksHeader.Header" xml:space="preserve">
    <value>background tasks</value>
  </data>
  <data name="ButtonRestart.Content" xml:space="preserve">
    <value>restart</value>
  </data>
  <data name="ChooseLanguage.Text" xml:space="preserve">
    <value>Choose your language</value>
  </data>
  <data name="CollectionEmptyView.Text" xml:space="preserve">
    <value>This user has no collection</value>
  </data>
  <data name="DownloadText.Text" xml:space="preserve">
    <value>downloads</value>
  </data>
  <data name="FeedbackButton.Content" xml:space="preserve">
    <value>send a suggestion</value>
  </data>
  <data name="FeedbackEmailText.Text" xml:space="preserve">
    <value>Send an email if you encounter issues or if you've suggestions</value>
  </data>
  <data name="FeedbackText.Text" xml:space="preserve">
    <value>feedback</value>
  </data>
  <data name="ItemDay.Content" xml:space="preserve">
    <value>once a day</value>
  </data>
  <data name="ItemFifteenMinutes.Content" xml:space="preserve">
    <value>15 min</value>
  </data>
  <data name="ItemFull.Content" xml:space="preserve">
    <value>full</value>
  </data>
  <data name="ItemFullText.Text" xml:space="preserve">
    <value>full</value>
  </data>
  <data name="ItemHalfHour.Content" xml:space="preserve">
    <value>half an hour</value>
  </data>
  <data name="ItemHour.Content" xml:space="preserve">
    <value>every hour</value>
  </data>
  <data name="ItemRaw.Content" xml:space="preserve">
    <value>raw</value>
  </data>
  <data name="ItemRawText.Text" xml:space="preserve">
    <value>raw</value>
  </data>
  <data name="ItemRegular.Content" xml:space="preserve">
    <value>regular</value>
  </data>
  <data name="ItemRegularText.Text" xml:space="preserve">
    <value>regular</value>
  </data>
  <data name="ItemSmall.Content" xml:space="preserve">
    <value>small</value>
  </data>
  <data name="ItemSmallText.Text" xml:space="preserve">
    <value>small</value>
  </data>
  <data name="ItemThreeHours.Content" xml:space="preserve">
    <value>every 3 hours</value>
  </data>
  <data name="LastUpdatedTask.Text" xml:space="preserve">
    <value>never run</value>
  </data>
  <data name="LastWallTaskError.Text" xml:space="preserve">
    <value>no error</value>
  </data>
  <data name="LockscreenIntervalUpdates.Header" xml:space="preserve">
    <value>period</value>
  </data>
  <data name="LockscreenText.Text" xml:space="preserve">
    <value>lockscreen</value>
  </data>
  <data name="NotationSentenceText.Text" xml:space="preserve">
    <value>Don't forget to give the app a note on the store ;)</value>
  </data>
  <data name="NoteButton.Content" xml:space="preserve">
    <value>give a note</value>
  </data>
  <data name="PeriodicLockscreenText.Text" xml:space="preserve">
    <value>Periodically update lockscreen background</value>
  </data>
  <data name="PeriodicWallpaperText.Text" xml:space="preserve">
    <value>Periodically update wallpaper</value>
  </data>
  <data name="PhotosProviderText.Text" xml:space="preserve">
    <value>All photos are from </value>
  </data>
  <data name="PivotItemAbout.Header" xml:space="preserve">
    <value>about</value>
  </data>
  <data name="TaskNotWorkingText.Text" xml:space="preserve">
    <value>If the task doesn't work properly, restart it</value>
  </data>
  <data name="WallpaperText.Text" xml:space="preserve">
    <value>wallpaper</value>
  </data>
  <data name="LockscreenSetFailed" xml:space="preserve">
    <value>Ops. There I couldn't set your lockscreen background :( Try again or contact the developer.</value>
  </data>
  <data name="LockscreenSetSuccess" xml:space="preserve">
    <value>The photo has been correctly set has your locksreen background :)</value>
  </data>
  <data name="SavePhotoFailed" xml:space="preserve">
    <value>The photo couldn't be saved :(</value>
  </data>
  <data name="SavePhotoSuccess" xml:space="preserve">
    <value>The photo was saved</value>
  </data>
  <data name="SettingLockscreen" xml:space="preserve">
    <value>Setting lockscreen background...</value>
  </data>
  <data name="SettingWallpaper" xml:space="preserve">
    <value>Settings wallpapaer...</value>
  </data>
  <data name="WallpaperSetFailed" xml:space="preserve">
    <value>Ops. There I couldn't set your wallpaper :( Try again or contact the developer.</value>
  </data>
  <data name="WallpaperSetSuccess" xml:space="preserve">
    <value>The photo has been correctly set as your wallpaper :)</value>
  </data>
  <data name="CmdCopyLinkText.Text" xml:space="preserve">
    <value>Copy link</value>
  </data>
  <data name="CmdSetAsText.Text" xml:space="preserve">
    <value>Set as...</value>
  </data>
  <data name="CmdDownloadText.Text" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="CmdOpenInBrowserText.Text" xml:space="preserve">
    <value>Open in browser</value>
  </data>
  <data name="CopyLinkSuccess" xml:space="preserve">
    <value>Link copied!</value>
  </data>
  <data name="NoError" xml:space="preserve">
    <value>no error</value>
  </data>
  <data name="PeriodicTile.Text" xml:space="preserve">
    <value>Periodically update primary live tile</value>
  </data>
  <data name="Tile.Text" xml:space="preserve">
    <value>tile</value>
  </data>
  <data name="TileIntervalUpdates.Header" xml:space="preserve">
    <value>period</value>
  </data>
  <data name="AboutPivotItem.Header" xml:space="preserve">
    <value>about</value>
  </data>
  <data name="CmdSettings.Label" xml:space="preserve">
    <value>settings</value>
  </data>
  <data name="CmdShowSearch.Label" xml:space="preserve">
    <value>show search</value>
  </data>
  <data name="TextSearchSentenceSuggestion.Text" xml:space="preserve">
    <value>begin by typing a keyword...</value>
  </data>
  <data name="NoPhotosYet.Text" xml:space="preserve">
    <value>No photos yet :(</value>
  </data>
  <data name="ItemSixHours.Content" xml:space="preserve">
    <value>every 6 hours</value>
  </data>
</root>